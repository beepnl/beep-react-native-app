require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

target 'app' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true

  target 'appTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # Flipper is disabled by default to avoid build issues with Xcode 16 / iOS 18 SDK.
  # Set RN_ENABLE_FLIPPER=1 in your environment to enable it.
  if ENV['RN_ENABLE_FLIPPER'] == '1'
    use_flipper!()
  end

  post_install do |installer|
    react_native_post_install(installer)

    # Ensure Folly doesn't redefine clock types on modern iOS by declaring clock_gettime availability
    # And enable libc++ compatibility shims for removed unary/binary_function in C++17 (Xcode 16)
    installer.pods_project.targets.each do |target|
      if ['RCT-Folly', 'boost'].include?(target.name)
        target.build_configurations.each do |config|
          settings = config.build_settings

          # For Folly only: preserve clock_gettime define fix
          if target.name == 'RCT-Folly'
            defs = settings['GCC_PREPROCESSOR_DEFINITIONS'] || ['$(inherited)']
            defs = [defs] unless defs.is_a?(Array)
            defs << 'FOLLY_HAVE_CLOCK_GETTIME=1'
            settings['GCC_PREPROCESSOR_DEFINITIONS'] = defs.uniq
          end

          # libc++ compatibility for removed std::unary_function / std::binary_function
          cxx = settings['OTHER_CPLUSPLUSFLAGS'] || ['$(inherited)']
          cxx = [cxx] unless cxx.is_a?(Array)
          cxx << '-D_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION=1'
          settings['OTHER_CPLUSPLUSFLAGS'] = cxx.uniq
        end
      end
    end
  end
end
