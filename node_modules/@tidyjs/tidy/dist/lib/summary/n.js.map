{"version":3,"file":"n.js","sources":["../../../src/summary/n.ts"],"sourcesContent":["type NOptions<T> = {\n  predicate?: (d: T, index: number, array: Iterable<T>) => boolean;\n};\n\n/**\n * Returns a function that computes the count over an array of items\n */\nexport function n<T>(options?: NOptions<T>) {\n  if (options?.predicate) {\n    const predicate = options.predicate;\n    return (items: T[]) =>\n      items.reduce((n, d, i) => (predicate(d, i, items) ? n + 1 : n), 0);\n  }\n\n  return (items: T[]) => items.length;\n}\n"],"names":[],"mappings":";;;;WAOqB;AACnB,MAAI,mCAAS;AACX,UAAM,YAAY,QAAQ;AAC1B,WAAO,CAAC,UACN,MAAM,OAAO,CAAC,IAAG,GAAG,MAAO,UAAU,GAAG,GAAG,SAAS,KAAI,IAAI,IAAI;AAAA;AAGpE,SAAO,CAAC,UAAe,MAAM;AAAA;;;;"}