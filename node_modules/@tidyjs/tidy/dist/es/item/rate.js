import { rate as rate$1 } from '../math/math.js';

function rate(numerator, denominator, options) {
  const numeratorFn = typeof numerator === "function" ? numerator : (d) => d[numerator];
  const denominatorFn = typeof denominator === "function" ? denominator : (d) => d[denominator];
  const {predicate, allowDivideByZero} = options != null ? options : {};
  return predicate == null ? (d, index, array) => {
    const denom = denominatorFn(d, index, array);
    const numer = numeratorFn(d, index, array);
    return rate$1(numer, denom, allowDivideByZero);
  } : (d, index, array) => {
    if (!predicate(d, index, array))
      return void 0;
    const denom = denominatorFn(d, index, array);
    const numer = numeratorFn(d, index, array);
    return rate$1(numer, denom, allowDivideByZero);
  };
}

export { rate };
//# sourceMappingURL=rate.js.map
